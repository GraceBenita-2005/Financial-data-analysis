import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

# Function to fetch stock data
def fetch_stock_data(ticker, start_date, end_date):
    stock = yf.download(ticker, start=start_date, end=end_date)
    return stock

# Function to calculate moving averages
def moving_average(data, window_size):
    return data.rolling(window=window_size).mean()

# Fetching data for a specific stock (e.g., Apple - AAPL)
ticker = 'AAPL'
start_date = '2020-01-01'
end_date = '2023-01-01'

stock_data = fetch_stock_data(ticker, start_date, end_date)

# Display the first few rows of the data
print(stock_data.head())

# Plot the stock price
plt.figure(figsize=(10,6))
plt.plot(stock_data['Close'], label='Closing Price')
plt.title(f"{ticker} Stock Closing Price")
plt.xlabel('Date')
plt.ylabel('Price (USD)')
plt.legend()
plt.show()

# Calculate and plot the 50-day and 200-day moving averages
stock_data['50_MA'] = moving_average(stock_data['Close'], 50)
stock_data['200_MA'] = moving_average(stock_data['Close'], 200)

plt.figure(figsize=(10,6))
plt.plot(stock_data['Close'], label='Closing Price')
plt.plot(stock_data['50_MA'], label='50-day MA', linestyle='--')
plt.plot(stock_data['200_MA'], label='200-day MA', linestyle='--')
plt.title(f"{ticker} Stock Price with Moving Averages")
plt.xlabel('Date')
plt.ylabel('Price (USD)')
plt.legend()
plt.show()

# Calculate percentage change for daily returns
stock_data['Daily_Return'] = stock_data['Close'].pct_change()
print(stock_data[['Close', 'Daily_Return']].head())

# Plot daily returns
plt.figure(figsize=(10,6))
plt.plot(stock_data['Daily_Return'], label='Daily Returns', color='orange')
plt.title(f"{ticker} Daily Returns")
plt.xlabel('Date')
plt.ylabel('Percentage Change')
plt.legend()
plt.show()

# Summary statistics of the stock
print("Stock Summary Statistics:")
print(stock_data.describe())
